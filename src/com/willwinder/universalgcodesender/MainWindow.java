/*
 * MainWindow.java
 *
 * Created on Jun 26, 2012, 3:04:38 PM
 */
package com.willwinder.universalgcodesender;

import com.willwinder.universalgcodesender.uielements.GcodeFileTypeFilter;
import com.willwinder.universalgcodesender.uielements.StepSizeSpinnerModel;
import gnu.io.CommPortIdentifier;
import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultCaret;
/**
 *
 * @author wwinder
 */
public class MainWindow extends javax.swing.JFrame 
implements SerialCommunicatorListener, KeyListener {
    
    javax.swing.Timer statusTimer = new javax.swing.Timer(200, new ActionListener() {
        @Override
          public void actionPerformed(ActionEvent e) {
            commPort.sendQuiteStringToComm("?");          
          }
       });

    /** Creates new form MainWindow */
    public MainWindow() {
        initComponents();
        initProgram();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lineBreakGroup = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        consoleTextArea = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        commandTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        readSettingsButton1 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        settingLabel0 = new javax.swing.JLabel();
        settingsTextField0 = new javax.swing.JTextField();
        settingHelpLabel0 = new javax.swing.JLabel();
        settingLabel1 = new javax.swing.JLabel();
        settingsTextField1 = new javax.swing.JTextField();
        settingHelpLabel1 = new javax.swing.JLabel();
        settingLabel2 = new javax.swing.JLabel();
        settingsTextField2 = new javax.swing.JTextField();
        settingHelpLabel2 = new javax.swing.JLabel();
        settingLabel3 = new javax.swing.JLabel();
        settingsTextField3 = new javax.swing.JTextField();
        settingHelpLabel3 = new javax.swing.JLabel();
        settingLabel4 = new javax.swing.JLabel();
        settingsTextField4 = new javax.swing.JTextField();
        settingHelpLabel4 = new javax.swing.JLabel();
        settingLabel5 = new javax.swing.JLabel();
        settingsTextField5 = new javax.swing.JTextField();
        settingHelpLabel5 = new javax.swing.JLabel();
        settingLabel6 = new javax.swing.JLabel();
        settingsTextField6 = new javax.swing.JTextField();
        settingHelpLabel6 = new javax.swing.JLabel();
        settingLabel7 = new javax.swing.JLabel();
        settingsTextField7 = new javax.swing.JTextField();
        settingHelpLabel7 = new javax.swing.JLabel();
        settingLabel8 = new javax.swing.JLabel();
        settingsTextField8 = new javax.swing.JTextField();
        settingHelpLabel8 = new javax.swing.JLabel();
        settingLabel9 = new javax.swing.JLabel();
        settingsTextField9 = new javax.swing.JTextField();
        settingHelpLabel9 = new javax.swing.JLabel();
        settingLabel10 = new javax.swing.JLabel();
        settingsTextField10 = new javax.swing.JTextField();
        settingHelpLabel10 = new javax.swing.JLabel();
        settingLabel11 = new javax.swing.JLabel();
        settingsTextField11 = new javax.swing.JTextField();
        settingHelpLabel11 = new javax.swing.JLabel();
        settingLabel12 = new javax.swing.JLabel();
        settingsTextField12 = new javax.swing.JTextField();
        settingHelpLabel12 = new javax.swing.JLabel();
        settingLabel13 = new javax.swing.JLabel();
        settingsTextField13 = new javax.swing.JTextField();
        settingHelpLabel13 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        settingLabel14 = new javax.swing.JLabel();
        settingsTextField14 = new javax.swing.JTextField();
        settingHelpLabel14 = new javax.swing.JLabel();
        settingLabel15 = new javax.swing.JLabel();
        settingsTextField15 = new javax.swing.JTextField();
        settingHelpLabel15 = new javax.swing.JLabel();
        settingLabel16 = new javax.swing.JLabel();
        settingsTextField16 = new javax.swing.JTextField();
        settingHelpLabel16 = new javax.swing.JLabel();
        settingLabel17 = new javax.swing.JLabel();
        settingsTextField17 = new javax.swing.JTextField();
        settingHelpLabel17 = new javax.swing.JLabel();
        settingLabel18 = new javax.swing.JLabel();
        settingsTextField18 = new javax.swing.JTextField();
        settingHelpLabel18 = new javax.swing.JLabel();
        settingLabel19 = new javax.swing.JLabel();
        settingsTextField19 = new javax.swing.JTextField();
        settingHelpLabel19 = new javax.swing.JLabel();
        settingLabel20 = new javax.swing.JLabel();
        settingsTextField20 = new javax.swing.JTextField();
        settingHelpLabel20 = new javax.swing.JLabel();
        settingLabel21 = new javax.swing.JLabel();
        settingsTextField21 = new javax.swing.JTextField();
        settingHelpLabel21 = new javax.swing.JLabel();
        settingLabel22 = new javax.swing.JLabel();
        settingsTextField22 = new javax.swing.JTextField();
        settingHelpLabel22 = new javax.swing.JLabel();
        settingsPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        askParameter = new javax.swing.JButton();
        G5XTextField1 = new javax.swing.JTextField();
        G5XXTextField1 = new javax.swing.JTextField();
        G5XYTextField1 = new javax.swing.JTextField();
        G5XZTextField1 = new javax.swing.JTextField();
        G5XTextField2 = new javax.swing.JTextField();
        G5XXTextField2 = new javax.swing.JTextField();
        G5XYTextField2 = new javax.swing.JTextField();
        G5XZTextField2 = new javax.swing.JTextField();
        G5XTextField3 = new javax.swing.JTextField();
        G5XXTextField3 = new javax.swing.JTextField();
        G5XYTextField3 = new javax.swing.JTextField();
        G5XZTextField3 = new javax.swing.JTextField();
        G5XTextField4 = new javax.swing.JTextField();
        G5XXTextField4 = new javax.swing.JTextField();
        G5XYTextField4 = new javax.swing.JTextField();
        G5XZTextField4 = new javax.swing.JTextField();
        G5XTextField5 = new javax.swing.JTextField();
        G5XXTextField5 = new javax.swing.JTextField();
        G5XYTextField5 = new javax.swing.JTextField();
        G5XZTextField5 = new javax.swing.JTextField();
        G5XTextField6 = new javax.swing.JTextField();
        G5XXTextField6 = new javax.swing.JTextField();
        G5XYTextField6 = new javax.swing.JTextField();
        G5XZTextField6 = new javax.swing.JTextField();
        G5XTextField7 = new javax.swing.JTextField();
        G5XXTextField7 = new javax.swing.JTextField();
        G5XYTextField7 = new javax.swing.JTextField();
        G5XZTextField7 = new javax.swing.JTextField();
        G5XTextField8 = new javax.swing.JTextField();
        G5XXTextField8 = new javax.swing.JTextField();
        G5XYTextField8 = new javax.swing.JTextField();
        G5XZTextField8 = new javax.swing.JTextField();
        G5XTextField9 = new javax.swing.JTextField();
        G5XXTextField9 = new javax.swing.JTextField();
        G5XYTextField9 = new javax.swing.JTextField();
        G5XZTextField9 = new javax.swing.JTextField();
        G5XWButton1 = new javax.swing.JButton();
        G5XWButton2 = new javax.swing.JButton();
        G5XWButton3 = new javax.swing.JButton();
        G5XWButton4 = new javax.swing.JButton();
        G5XWButton5 = new javax.swing.JButton();
        G5XWButton6 = new javax.swing.JButton();
        G5XWButton7 = new javax.swing.JButton();
        G5XWButton8 = new javax.swing.JButton();
        G5XWButton9 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        commPortComboBox = new javax.swing.JComboBox();
        baudrateSelectionComboBox = new javax.swing.JComboBox();
        opencloseButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        lineBreakRN = new javax.swing.JRadioButton();
        lineBreakN = new javax.swing.JRadioButton();
        lineBreakNR = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        sendKill = new javax.swing.JButton();
        toggleGcodCheckMode = new javax.swing.JButton();
        sendHoming = new javax.swing.JButton();
        askStatus = new javax.swing.JButton();
        scrollWindowCheckBox = new javax.swing.JCheckBox();
        supressCheckBox = new javax.swing.JCheckBox();
        manualControlPanel = new javax.swing.JPanel();
        xPlusButton = new javax.swing.JButton();
        xMinusButton = new javax.swing.JButton();
        yMinusButton = new javax.swing.JButton();
        zPlusButton = new javax.swing.JButton();
        zMinusButton = new javax.swing.JButton();
        yPlusButton = new javax.swing.JButton();
        stepSizeLabel = new javax.swing.JLabel();
        stepSizeSpinner = new javax.swing.JSpinner();
        jPanel6 = new javax.swing.JPanel();
        xLocationLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        zLocationLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        yLocationLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        xLocationLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        yLocationLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        zLocationLabel1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        LabelStatus1 = new javax.swing.JLabel();
        LabelStatus2 = new javax.swing.JLabel();
        resetCoordinatesButton = new javax.swing.JButton();
        returnToZeroButton = new javax.swing.JButton();
        performHomingCycleButton = new javax.swing.JButton();
        updateCheckBox = new javax.swing.JCheckBox();
        askParserStatus = new javax.swing.JButton();
        abortButton = new javax.swing.JButton();
        commandLabel = new javax.swing.JLabel();
        commandTextField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        browseButton = new javax.swing.JButton();
        sendButton = new javax.swing.JButton();
        pauseButton = new javax.swing.JButton();
        fileTextField = new javax.swing.JTextField();
        fileLabel = new javax.swing.JLabel();
        overrideSpeedCheckBox = new javax.swing.JCheckBox();
        overrideSpeedValueSpinner = new javax.swing.JSpinner();
        sentRowsLabel = new javax.swing.JLabel();
        sentRowsValueLabel = new javax.swing.JLabel();
        rowsLabel = new javax.swing.JLabel();
        rowsValueLabel = new javax.swing.JLabel();
        durationLabel = new javax.swing.JLabel();
        durationValueLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        remainingRowsValueLabel = new javax.swing.JLabel();
        remainingRowsLabel = new javax.swing.JLabel();
        remainingTimeLabel = new javax.swing.JLabel();
        remainingTimeValueLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(970, 470));

        jTabbedPane2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        consoleTextArea.setColumns(20);
        consoleTextArea.setRows(5);
        jScrollPane2.setViewportView(consoleTextArea);

        jTabbedPane2.addTab("Console", jScrollPane2);

        commandTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Command", "Sent", "Done", "Response"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        commandTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(commandTable);
        commandTable.getColumnModel().getColumn(0).setPreferredWidth(500);
        commandTable.getColumnModel().getColumn(1).setResizable(false);
        commandTable.getColumnModel().getColumn(1).setPreferredWidth(40);
        commandTable.getColumnModel().getColumn(2).setResizable(false);
        commandTable.getColumnModel().getColumn(2).setPreferredWidth(40);
        commandTable.getColumnModel().getColumn(3).setPreferredWidth(350);

        jTabbedPane2.addTab("Command Table", jScrollPane1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("System"));

        readSettingsButton1.setText("read settings ($$)");
        readSettingsButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readSettingsButton1ActionPerformed(evt);
            }
        });

        settingLabel0.setText("$XX");

        settingsTextField0.setText("000.000");

        settingHelpLabel0.setText("Help text form Grbl.");

        settingLabel1.setText("$XX");

        settingsTextField1.setText("000.000");

        settingHelpLabel1.setText("Help text form Grbl.");

        settingLabel2.setText("$XX");

        settingsTextField2.setText("000.000");

        settingHelpLabel2.setText("Help text form Grbl.");

        settingLabel3.setText("$XX");

        settingsTextField3.setText("000.000");

        settingHelpLabel3.setText("Help text form Grbl.");

        settingLabel4.setText("$XX");

        settingsTextField4.setText("000.000");

        settingHelpLabel4.setText("Help text form Grbl.");

        settingLabel5.setText("$XX");

        settingsTextField5.setText("000.000");

        settingHelpLabel5.setText("Help text form Grbl.");

        settingLabel6.setText("$XX");

        settingsTextField6.setText("000.000");

        settingHelpLabel6.setText("Help text form Grbl.");

        settingLabel7.setText("$XX");

        settingsTextField7.setText("000.000");

        settingHelpLabel7.setText("Help text form Grbl.");

        settingLabel8.setText("$XX");

        settingsTextField8.setText("000.000");

        settingHelpLabel8.setText("Help text form Grbl.");

        settingLabel9.setText("$XX");

        settingsTextField9.setText("000.000");

        settingHelpLabel9.setText("Help text form Grbl.");

        settingLabel10.setText("$XX");

        settingsTextField10.setText("000.000");

        settingHelpLabel10.setText("Help text form Grbl.");

        settingLabel11.setText("$XX");

        settingsTextField11.setText("000.000");

        settingHelpLabel11.setText("Help text form Grbl.");

        settingLabel12.setText("$XX");

        settingsTextField12.setText("000.000");

        settingHelpLabel12.setText("Help text form Grbl.");

        settingLabel13.setText("$XX");

        settingsTextField13.setText("000.000");

        settingHelpLabel13.setText("Help text form Grbl.");

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(settingLabel13)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField13))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(settingLabel12)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField12))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(settingLabel11)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField11))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(settingLabel10)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField10))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(settingLabel9)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField9))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                        .add(settingLabel8)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField8))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(settingLabel7)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField7))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(settingLabel6)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField6))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(settingLabel5)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField5))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(settingLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField4))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(settingLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField3))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(settingLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField2))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(settingLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField1))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(settingLabel0)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField0, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(settingHelpLabel1)
                    .add(settingHelpLabel2)
                    .add(settingHelpLabel3)
                    .add(settingHelpLabel4)
                    .add(settingHelpLabel6)
                    .add(settingHelpLabel7)
                    .add(settingHelpLabel8)
                    .add(settingHelpLabel9)
                    .add(settingHelpLabel10)
                    .add(settingHelpLabel11)
                    .add(settingHelpLabel12)
                    .add(settingHelpLabel13)
                    .add(settingHelpLabel5)
                    .add(settingHelpLabel0))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel0)
                    .add(settingsTextField0, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel0))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel1)
                    .add(settingsTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel2)
                    .add(settingsTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel3)
                    .add(settingsTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel4)
                    .add(settingsTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel4))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel5)
                    .add(settingsTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel6)
                    .add(settingsTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel6))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel7)
                    .add(settingsTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel8)
                    .add(settingsTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel8))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel9)
                    .add(settingsTextField9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel9))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel10)
                    .add(settingsTextField10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel10))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel11)
                    .add(settingsTextField11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel11))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel12)
                    .add(settingsTextField12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel12))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel13)
                    .add(settingsTextField13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel13))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        settingLabel14.setText("$XX");

        settingsTextField14.setText("000.000");

        settingHelpLabel14.setText("Help text form Grbl.");

        settingLabel15.setText("$XX");

        settingsTextField15.setText("000.000");

        settingHelpLabel15.setText("Help text form Grbl.");

        settingLabel16.setText("$XX");

        settingsTextField16.setText("000.000");

        settingHelpLabel16.setText("Help text form Grbl.");

        settingLabel17.setText("$XX");

        settingsTextField17.setText("000.000");

        settingHelpLabel17.setText("Help text form Grbl.");

        settingLabel18.setText("$XX");

        settingsTextField18.setText("000.000");

        settingHelpLabel18.setText("Help text form Grbl.");

        settingLabel19.setText("$XX");

        settingsTextField19.setText("000.000");

        settingHelpLabel19.setText("Help text form Grbl.");

        settingLabel20.setText("$XX");

        settingsTextField20.setText("000.000");

        settingHelpLabel20.setText("Help text form Grbl.");

        settingLabel21.setText("$XX");

        settingsTextField21.setText("000.000");

        settingHelpLabel21.setText("Help text form Grbl.");

        settingLabel22.setText("$XX");

        settingsTextField22.setText("000.000");

        settingHelpLabel22.setText("Help text form Grbl.");

        org.jdesktop.layout.GroupLayout jPanel8Layout = new org.jdesktop.layout.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel8Layout.createSequentialGroup()
                        .add(settingLabel22)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField22))
                    .add(jPanel8Layout.createSequentialGroup()
                        .add(settingLabel21)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField21))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel8Layout.createSequentialGroup()
                        .add(settingLabel20)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField20))
                    .add(jPanel8Layout.createSequentialGroup()
                        .add(settingLabel19)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField19))
                    .add(jPanel8Layout.createSequentialGroup()
                        .add(settingLabel18)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField18))
                    .add(jPanel8Layout.createSequentialGroup()
                        .add(settingLabel17)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField17))
                    .add(jPanel8Layout.createSequentialGroup()
                        .add(settingLabel16)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField16))
                    .add(jPanel8Layout.createSequentialGroup()
                        .add(settingLabel15)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField15))
                    .add(jPanel8Layout.createSequentialGroup()
                        .add(settingLabel14)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(settingsTextField14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 68, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(settingHelpLabel14)
                    .add(settingHelpLabel15)
                    .add(settingHelpLabel16)
                    .add(settingHelpLabel17)
                    .add(settingHelpLabel18)
                    .add(settingHelpLabel19)
                    .add(settingHelpLabel20)
                    .add(settingHelpLabel21)
                    .add(settingHelpLabel22))
                .add(0, 126, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .add(50, 50, 50)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel14)
                    .add(settingsTextField14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel14))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel15)
                    .add(settingsTextField15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel15))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel16)
                    .add(settingsTextField16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel16))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel17)
                    .add(settingsTextField17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel17))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel18)
                    .add(settingsTextField18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel18))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel19)
                    .add(settingsTextField19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel19))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel20)
                    .add(settingsTextField20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel20))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel21)
                    .add(settingsTextField21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel21))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(settingLabel22)
                    .add(settingsTextField22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(settingHelpLabel22))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(readSettingsButton1)
                    .add(jPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(readSettingsButton1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jPanel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Grbl Settings", jPanel4);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Position"));

        askParameter.setText("read parameters ($#)");
        askParameter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                askParameterActionPerformed(evt);
            }
        });

        G5XTextField1.setText("G5X");
        G5XTextField1.setEnabled(false);

        G5XXTextField1.setText("000.000");

        G5XYTextField1.setText("000.000");

        G5XZTextField1.setText("000.000");

        G5XTextField2.setText("G5X");
        G5XTextField2.setEnabled(false);

        G5XXTextField2.setText("000.000");

        G5XYTextField2.setText("000.000");

        G5XZTextField2.setText("000.000");

        G5XTextField3.setText("G5X");
        G5XTextField3.setEnabled(false);

        G5XXTextField3.setText("000.000");

        G5XYTextField3.setText("000.000");

        G5XZTextField3.setText("000.000");

        G5XTextField4.setText("G5X");
        G5XTextField4.setEnabled(false);

        G5XXTextField4.setText("000.000");

        G5XYTextField4.setText("000.000");

        G5XZTextField4.setText("000.000");

        G5XTextField5.setText("G5X");
        G5XTextField5.setEnabled(false);

        G5XXTextField5.setText("000.000");

        G5XYTextField5.setText("000.000");

        G5XZTextField5.setText("000.000");

        G5XTextField6.setText("G5X");
        G5XTextField6.setEnabled(false);

        G5XXTextField6.setText("000.000");

        G5XYTextField6.setText("000.000");

        G5XZTextField6.setText("000.000");

        G5XTextField7.setText("G5X");
        G5XTextField7.setEnabled(false);

        G5XXTextField7.setText("000.000");

        G5XYTextField7.setText("000.000");

        G5XZTextField7.setText("000.000");

        G5XTextField8.setText("G5X");
        G5XTextField8.setEnabled(false);

        G5XXTextField8.setText("000.000");

        G5XYTextField8.setText("000.000");

        G5XZTextField8.setText("000.000");

        G5XTextField9.setText("G5X");
        G5XTextField9.setEnabled(false);

        G5XXTextField9.setText("000.000");

        G5XYTextField9.setText("000.000");

        G5XZTextField9.setText("000.000");

        G5XWButton1.setText("write");
        G5XWButton1.setEnabled(false);
        G5XWButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G5XWButton1ActionPerformed(evt);
            }
        });

        G5XWButton2.setText("write");
        G5XWButton2.setEnabled(false);

        G5XWButton3.setText("write");
        G5XWButton3.setEnabled(false);

        G5XWButton4.setText("write");
        G5XWButton4.setEnabled(false);

        G5XWButton5.setText("write");
        G5XWButton5.setEnabled(false);

        G5XWButton6.setText("write");
        G5XWButton6.setEnabled(false);

        G5XWButton7.setText("write");
        G5XWButton7.setEnabled(false);

        G5XWButton8.setText("write");
        G5XWButton8.setEnabled(false);

        G5XWButton9.setText("write");
        G5XWButton9.setEnabled(false);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(G5XTextField3)
                            .add(G5XTextField2)
                            .add(G5XTextField1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(G5XXTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(G5XYTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(17, 17, 17)
                                .add(G5XZTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(G5XWButton1))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(G5XXTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(G5XYTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(17, 17, 17)
                                .add(G5XZTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(G5XWButton3))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(G5XXTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(G5XYTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(17, 17, 17)
                                .add(G5XZTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(G5XWButton2))))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(G5XTextField4)
                            .add(G5XTextField9)
                            .add(G5XTextField8)
                            .add(G5XTextField7)
                            .add(G5XTextField6)
                            .add(G5XTextField5))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(G5XXTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(G5XYTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(17, 17, 17)
                                .add(G5XZTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(G5XWButton4))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(G5XXTextField9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(11, 11, 11)
                                        .add(G5XYTextField9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(18, 18, 18)
                                        .add(G5XZTextField9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(G5XXTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(G5XYTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(17, 17, 17)
                                        .add(G5XZTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(G5XXTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(G5XYTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(17, 17, 17)
                                        .add(G5XZTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(G5XXTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(G5XYTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(17, 17, 17)
                                        .add(G5XZTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(G5XXTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(11, 11, 11)
                                        .add(G5XYTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(18, 18, 18)
                                        .add(G5XZTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, G5XWButton5)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, G5XWButton6)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, G5XWButton7)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, G5XWButton8)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, G5XWButton9)))))
                    .add(askParameter))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(askParameter)
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(G5XTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XXTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XYTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XZTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XWButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(G5XTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XXTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XYTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XZTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XWButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(G5XTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XXTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XYTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XZTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XWButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(G5XTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XXTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XYTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XZTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XWButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(G5XTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XXTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XYTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XZTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XWButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(G5XTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XXTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XYTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XZTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XWButton6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(G5XTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XXTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XYTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XZTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XWButton7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(G5XTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XXTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XYTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XZTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XWButton8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(G5XTextField9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XXTextField9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XYTextField9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XZTextField9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(G5XWButton9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(0, 149, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout settingsPanelLayout = new org.jdesktop.layout.GroupLayout(settingsPanel);
        settingsPanel.setLayout(settingsPanelLayout);
        settingsPanelLayout.setHorizontalGroup(
            settingsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(settingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(423, Short.MAX_VALUE))
        );
        settingsPanelLayout.setVerticalGroup(
            settingsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, settingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Grbl Parameters", settingsPanel);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Connection"));
        jPanel3.setMaximumSize(new java.awt.Dimension(325, 125));
        jPanel3.setMinimumSize(new java.awt.Dimension(325, 125));
        jPanel3.setName("Connection");

        baudrateSelectionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2400", "4800", "9600", "19200", "38400", "57600", "115200" }));
        baudrateSelectionComboBox.setSelectedIndex(6);
        baudrateSelectionComboBox.setToolTipText("Select baudrate to use for the serial port.");
        baudrateSelectionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baudrateSelectionComboBoxActionPerformed(evt);
            }
        });

        opencloseButton.setText("Open");
        opencloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opencloseButtonActionPerformed(evt);
            }
        });

        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/refresh.gif"))); // NOI18N
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        lineBreakGroup.add(lineBreakRN);
        lineBreakRN.setText("\\r\\n");
        lineBreakRN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineBreakRNActionPerformed(evt);
            }
        });

        lineBreakGroup.add(lineBreakN);
        lineBreakN.setText("\\n");
        lineBreakN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineBreakNActionPerformed(evt);
            }
        });

        lineBreakGroup.add(lineBreakNR);
        lineBreakNR.setText("\\n\\r");
        lineBreakNR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineBreakNRActionPerformed(evt);
            }
        });

        jLabel3.setText("Baud Rate:");

        jLabel5.setText("Line Terminator:");

        jLabel7.setText("Serial Port:");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(12, 12, 12)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jLabel7)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(commPortComboBox, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jLabel5)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(lineBreakN)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(lineBreakNR)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(lineBreakRN)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(baudrateSelectionComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(refreshButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(opencloseButton)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(commPortComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel3)
                        .add(baudrateSelectionComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(refreshButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(opencloseButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(lineBreakNR)
                    .add(lineBreakRN)
                    .add(lineBreakN))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Control"));
        jPanel5.setName("Control");

        sendKill.setText("$X");
        sendKill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendKillActionPerformed(evt);
            }
        });

        toggleGcodCheckMode.setText("$C");
        toggleGcodCheckMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleGcodCheckModeActionPerformed(evt);
            }
        });

        sendHoming.setText("$H");
        sendHoming.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendHomingActionPerformed(evt);
            }
        });

        askStatus.setText("?");
        askStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                askStatusActionPerformed(evt);
            }
        });

        scrollWindowCheckBox.setSelected(true);
        scrollWindowCheckBox.setText("Scroll");
        scrollWindowCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scrollWindowCheckBoxActionPerformed(evt);
            }
        });

        supressCheckBox.setSelected(true);
        supressCheckBox.setText("Suppress");
        supressCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supressCheckBoxActionPerformed(evt);
            }
        });

        manualControlPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        xPlusButton.setText("X+");
        xPlusButton.setToolTipText("use the right arrow hotkey");
        xPlusButton.setEnabled(false);
        xPlusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xPlusButtonActionPerformed(evt);
            }
        });

        xMinusButton.setText("X-");
        xMinusButton.setToolTipText("use the left arrow hotkey");
        xMinusButton.setEnabled(false);
        xMinusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xMinusButtonActionPerformed(evt);
            }
        });

        yMinusButton.setText("Y-");
        yMinusButton.setToolTipText("use the down arrow hotkey");
        yMinusButton.setEnabled(false);
        yMinusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yMinusButtonActionPerformed(evt);
            }
        });

        zPlusButton.setText("Z+");
        zPlusButton.setToolTipText("use the page up hotkey");
        zPlusButton.setEnabled(false);
        zPlusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zPlusButtonActionPerformed(evt);
            }
        });

        zMinusButton.setText("Z-");
        zMinusButton.setToolTipText("use the page down hotkey");
        zMinusButton.setEnabled(false);
        zMinusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zMinusButtonActionPerformed(evt);
            }
        });

        yPlusButton.setText("Y+");
        yPlusButton.setToolTipText("use the up arrow hotkey");
        yPlusButton.setEnabled(false);
        yPlusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yPlusButtonActionPerformed(evt);
            }
        });

        stepSizeLabel.setText("Step size:");

        stepSizeSpinner.setModel(new StepSizeSpinnerModel(1.0, 0.0, null, 1.0));
        stepSizeSpinner.setEnabled(false);
        stepSizeSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                stepSizeSpinnerStateChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout manualControlPanelLayout = new org.jdesktop.layout.GroupLayout(manualControlPanel);
        manualControlPanel.setLayout(manualControlPanelLayout);
        manualControlPanelLayout.setHorizontalGroup(
            manualControlPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(manualControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(xMinusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(manualControlPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(yPlusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(yMinusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(xPlusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(manualControlPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(zPlusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(zMinusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 24, Short.MAX_VALUE)
                .add(manualControlPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, stepSizeLabel)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, stepSizeSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        manualControlPanelLayout.setVerticalGroup(
            manualControlPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(manualControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(manualControlPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(manualControlPanelLayout.createSequentialGroup()
                        .add(26, 26, 26)
                        .add(manualControlPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(manualControlPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(xMinusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(xPlusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(manualControlPanelLayout.createSequentialGroup()
                                .add(59, 59, 59)
                                .add(stepSizeLabel)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(stepSizeSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(manualControlPanelLayout.createSequentialGroup()
                        .add(manualControlPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(yPlusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(zPlusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(manualControlPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(yMinusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(zMinusButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        xLocationLabel.setText("0");

        jLabel2.setText("X:");

        jLabel8.setText("Work Position:");

        jLabel6.setText("Z:");

        zLocationLabel.setText("0");

        jLabel4.setText("Y:");

        yLocationLabel.setText("0");

        jLabel9.setText("Machine Position:");

        jLabel10.setText("X:");

        xLocationLabel1.setText("0");

        jLabel11.setText("Y:");

        yLocationLabel1.setText("0");

        jLabel12.setText("Z:");

        zLocationLabel1.setText("0");

        jLabel1.setText("Status:");

        LabelStatus1.setText("not updated yet");

        LabelStatus2.setText("not updated yet");

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(37, 37, 37)
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel6Layout.createSequentialGroup()
                                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jLabel11)
                                    .add(jLabel12)
                                    .add(jLabel10))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel6Layout.createSequentialGroup()
                                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(xLocationLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .add(yLocationLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .add(56, 56, 56))
                                    .add(jPanel6Layout.createSequentialGroup()
                                        .add(zLocationLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(147, 147, 147))))
                            .add(jPanel6Layout.createSequentialGroup()
                                .add(jLabel9)
                                .addContainerGap(58, Short.MAX_VALUE))))
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(LabelStatus1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .add(LabelStatus2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(2, 2, 2)
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel4)
                            .add(jLabel6)
                            .add(jLabel2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, yLocationLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, xLocationLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(zLocationLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(0, 0, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(jLabel9))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(xLocationLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(yLocationLabel)
                            .add(jLabel4))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(zLocationLabel)
                            .add(jLabel6)))
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel10)
                            .add(xLocationLabel1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(yLocationLabel1)
                            .add(jLabel11))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(zLocationLabel1)
                            .add(jLabel12))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(LabelStatus1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(LabelStatus2)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        resetCoordinatesButton.setText("Reset Coordinates");
        resetCoordinatesButton.setEnabled(false);
        resetCoordinatesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetCoordinatesButtonActionPerformed(evt);
            }
        });

        returnToZeroButton.setText("Return to Zero");
        returnToZeroButton.setEnabled(false);
        returnToZeroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnToZeroButtonActionPerformed(evt);
            }
        });

        performHomingCycleButton.setText("Do Homing Cycle");
        performHomingCycleButton.setEnabled(false);
        performHomingCycleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                performHomingCycleButtonActionPerformed(evt);
            }
        });

        updateCheckBox.setSelected(true);
        updateCheckBox.setText("Update");
        updateCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCheckBoxActionPerformed(evt);
            }
        });

        askParserStatus.setText("$G");
        askParserStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                askParserStatusActionPerformed(evt);
            }
        });

        abortButton.setText("CTRL-X");
        abortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abortButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(manualControlPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(askParserStatus)
                            .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jPanel5Layout.createSequentialGroup()
                                    .add(returnToZeroButton)
                                    .add(82, 82, 82)
                                    .add(toggleGcodCheckMode))
                                .add(jPanel5Layout.createSequentialGroup()
                                    .add(scrollWindowCheckBox)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                    .add(supressCheckBox)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(updateCheckBox))
                                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel5Layout.createSequentialGroup()
                                        .add(resetCoordinatesButton)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(askStatus))
                                    .add(jPanel5Layout.createSequentialGroup()
                                        .add(performHomingCycleButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(abortButton)
                                        .add(12, 12, 12)
                                        .add(sendHoming)
                                        .add(18, 18, 18)
                                        .add(sendKill)))))
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(new java.awt.Component[] {resetCoordinatesButton, returnToZeroButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel5Layout.createSequentialGroup()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(scrollWindowCheckBox)
                    .add(supressCheckBox)
                    .add(updateCheckBox))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(manualControlPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(resetCoordinatesButton)
                    .add(askStatus)
                    .add(askParserStatus))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(returnToZeroButton)
                    .add(toggleGcodCheckMode))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(performHomingCycleButton)
                    .add(sendHoming)
                    .add(sendKill)
                    .add(abortButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        commandLabel.setText("Command");

        commandTextField.setEnabled(false);
        commandTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commandTextFieldActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Send"));
        jPanel2.setName("Send");

        browseButton.setText("Browse");
        browseButton.setEnabled(false);
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        sendButton.setText("Send");
        sendButton.setEnabled(false);
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        pauseButton.setText("Pause");
        pauseButton.setEnabled(false);
        pauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseButtonActionPerformed(evt);
            }
        });

        fileTextField.setEnabled(false);

        fileLabel.setText("File");

        overrideSpeedCheckBox.setText("Override speed %");
        overrideSpeedCheckBox.setEnabled(false);

        overrideSpeedValueSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(60), Integer.valueOf(1), null, Integer.valueOf(1)));
        overrideSpeedValueSpinner.setEnabled(false);

        sentRowsLabel.setText("Sent Rows:");

        sentRowsValueLabel.setText("0");

        rowsLabel.setText("Total Rows In File:");

        rowsValueLabel.setText("0");

        durationLabel.setText("Duration:");

        durationValueLabel.setText("00:00:00");

        cancelButton.setText("Cancel");
        cancelButton.setEnabled(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        remainingRowsValueLabel.setText("0");

        remainingRowsLabel.setText("Remaining Rows:");

        remainingTimeLabel.setText("Estimated Time Remaining:");

        remainingTimeValueLabel.setText("--:--:--");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(fileLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(fileTextField)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(browseButton))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(sendButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 68, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pauseButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelButton)
                        .add(18, 18, 18)
                        .add(overrideSpeedValueSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(overrideSpeedCheckBox)
                        .addContainerGap())
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(22, 22, 22)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(sentRowsLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(sentRowsValueLabel))
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(rowsLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(rowsValueLabel))
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(remainingRowsLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(remainingRowsValueLabel)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                                .add(remainingTimeLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(remainingTimeValueLabel))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                                .add(durationLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(durationValueLabel)))
                        .add(97, 97, 97))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(fileLabel)
                        .add(fileTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(browseButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(sendButton)
                        .add(pauseButton)
                        .add(overrideSpeedValueSpinner, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(cancelButton))
                    .add(overrideSpeedCheckBox))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(rowsLabel)
                    .add(rowsValueLabel)
                    .add(durationValueLabel)
                    .add(durationLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(sentRowsLabel)
                    .add(sentRowsValueLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(remainingRowsLabel)
                    .add(remainingRowsValueLabel)
                    .add(remainingTimeValueLabel)
                    .add(remainingTimeLabel))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(layout.createSequentialGroup()
                        .add(commandLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(commandTextField))
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jTabbedPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(commandLabel)
                            .add(commandTextField)))
                    .add(layout.createSequentialGroup()
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTabbedPane2)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /** End of generated code.
     */
    
    /** Generated callback functions, hand coded.
     */
    private void scrollWindowCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scrollWindowCheckBoxActionPerformed
        checkScrollWindow();
    }//GEN-LAST:event_scrollWindowCheckBoxActionPerformed

    private void commandTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commandTextFieldActionPerformed
        final String str = this.commandTextField.getText().replaceAll("(\\r\\n|\\n\\r|\\r|\\n)", "");
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                commPort.queueStringForComm(str + "\n");
                askparserStatus();
            }
        });
        this.commandTextField.setText("");
        this.commandList.add(str);
        this.commandNum = -1;
    }//GEN-LAST:event_commandTextFieldActionPerformed

    // TODO: Find out how to make these key* functions actions like the above.
    @Override
    public void keyPressed(KeyEvent ke) {
        boolean pressed = false;
        
        if (ke.getKeyCode() == KeyEvent.VK_UP) {
            pressed = true;
            if (this.commandNum == 0 || this.commandList.isEmpty()) {
                java.awt.Toolkit.getDefaultToolkit().beep();
            } else if (this.commandNum == -1) {
                this.commandNum = this.commandList.size() -1;
            } else {
                this.commandNum--;
            }
        }
        else if (ke.getKeyCode() == KeyEvent.VK_DOWN) {
            pressed = true;
            if ((this.commandNum == -1) || this.commandNum == (this.commandList.size() -1)) {
                java.awt.Toolkit.getDefaultToolkit().beep();
                return;
            } else {
                this.commandNum++;
            }
        }
        
        if (pressed && this.commandNum != -1) {
            String text = this.commandList.get(this.commandNum);
            this.commandTextField.setText(text);
        }
    }
    
    @Override
    public void keyTyped(KeyEvent ke) {
        // Don't care about this one...
    }
    
    @Override
    public void keyReleased(KeyEvent ke) {
        // Or this one...
    }
    
    private void opencloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opencloseButtonActionPerformed
        if( this.opencloseButton.getText().equalsIgnoreCase("open") ) {
            Boolean ret = openCommConnection();
            if(updateCheckBox.isSelected()) {
                statusTimer.start();
            askparserStatus();
            }
            if (ret) {
                // Let the command field grab focus.
                commandTextField.grabFocus();
            }
        } else {
           statusTimer.stop();
           closeCommConnection();
        }
    }//GEN-LAST:event_opencloseButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        loadPortSelector();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void lineBreakNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineBreakNActionPerformed
        this.commPort.setLineTerminator(this.getNewline());
    }//GEN-LAST:event_lineBreakNActionPerformed

    private void baudrateSelectionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baudrateSelectionComboBoxActionPerformed
    }//GEN-LAST:event_baudrateSelectionComboBoxActionPerformed

    private void lineBreakNRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineBreakNRActionPerformed
        this.commPort.setLineTerminator(this.getNewline());
    }//GEN-LAST:event_lineBreakNRActionPerformed

    private void lineBreakRNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineBreakRNActionPerformed
        this.commPort.setLineTerminator(this.getNewline());
    }//GEN-LAST:event_lineBreakRNActionPerformed

    private void askStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_askStatusActionPerformed
        try {
            this.commPort.statusSend();
        } catch (Exception e) {
            e.printStackTrace();
            this.displayErrorDialog("Error while trying to get status");
        }
    }//GEN-LAST:event_askStatusActionPerformed

    private void askParserStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_askParserStatusActionPerformed
        askparserStatus();
    }//GEN-LAST:event_askParserStatusActionPerformed

    private void toggleGcodCheckModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleGcodCheckModeActionPerformed
                try {
        this.commPort.sendStringToComm(CommUtils.GRBL_CHECK_MODE + "\n");
        } catch (Exception e) {
            e.printStackTrace();
            this.displayErrorDialog("Error while trying to get status");
        }
    }//GEN-LAST:event_toggleGcodCheckModeActionPerformed

    private void sendKillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendKillActionPerformed
                try {
        this.commPort.sendStringToComm(CommUtils.GRBL_KILL_LOCK + "\n");
        } catch (Exception e) {
            e.printStackTrace();
            this.displayErrorDialog("Error while trying to get status");
        }
    }//GEN-LAST:event_sendKillActionPerformed

    private void sendHomingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendHomingActionPerformed
        try {
            this.commPort.sendStringToComm(CommUtils.GRBL_HOMING + "\n");
        } catch (Exception e) {
            e.printStackTrace();
            this.displayErrorDialog("Error while trying to get status");
        }
    }//GEN-LAST:event_sendHomingActionPerformed

    private void supressCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supressCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supressCheckBoxActionPerformed

    private void performHomingCycleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_performHomingCycleButtonActionPerformed
        this.commPort.queueStringForComm(CommUtils.GCODE_PERFORM_HOMING_CYCLE + "\n");

        // TODO: Are these needed after the homing cycle?
        //this.commPort.queueStringForComm(CommUtils.GCODE_RESET_COORDINATES_TO_ZERO + "\n");

        //this.setManualLocation(0, 0, 0);
        //this.updateManualLabels(this.manualLocation);
    }//GEN-LAST:event_performHomingCycleButtonActionPerformed

    private void returnToZeroButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnToZeroButtonActionPerformed
        this.commPort.queueStringForComm(CommUtils.GCODE_RETURN_TO_ZERO_LOCATION + "\n");
        //this.setManualLocation(0, 0, 0);
        //this.updateManualLabels(this.manualLocation);
    }//GEN-LAST:event_returnToZeroButtonActionPerformed

    private void resetCoordinatesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetCoordinatesButtonActionPerformed
        this.commPort.queueStringForComm(CommUtils.GCODE_RESET_COORDINATES_TO_ZERO + "\n");
        //this.setManualLocation(0, 0, 0);
        //this.updateManualLabels(this.manualLocation);
    }//GEN-LAST:event_resetCoordinatesButtonActionPerformed

    private void yPlusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yPlusButtonActionPerformed
        //this.adjustManualLocation(0, this.getStepSize(), 0);
        //this.sendManualCommand();
        this.commPort.sendStringToComm("G91 Y" + this.getStepSize() + "\n");
        this.commPort.sendStringToComm("G90\n");
    }//GEN-LAST:event_yPlusButtonActionPerformed

    private void zMinusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zMinusButtonActionPerformed
        //this.adjustManualLocation(0, 0, -1 * this.getStepSize());
        //this.sendManualCommand();
        this.commPort.sendStringToComm("G91 Z" + -1 * this.getStepSize() + "\n");
        this.commPort.sendStringToComm("G90\n");
    }//GEN-LAST:event_zMinusButtonActionPerformed

    private void zPlusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zPlusButtonActionPerformed
        //this.adjustManualLocation(0, 0, this.getStepSize());
        //this.sendManualCommand();
        this.commPort.sendStringToComm("G91 Z" + this.getStepSize() + "\n");
        this.commPort.sendStringToComm("G90\n");
    }//GEN-LAST:event_zPlusButtonActionPerformed

    private void yMinusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yMinusButtonActionPerformed
        //this.adjustManualLocation(0, -1 * this.getStepSize(), 0);
        //this.sendManualCommand();
        this.commPort.sendStringToComm("G91 Y" + -1 * this.getStepSize() + "\n");
        this.commPort.sendStringToComm("G90\n");
    }//GEN-LAST:event_yMinusButtonActionPerformed

    private void xMinusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xMinusButtonActionPerformed
        //this.adjustManualLocation(-1 * this.getStepSize(), 0, 0);
        //this.sendManualCommand();
        this.commPort.sendStringToComm("G91 X" + -1 * this.getStepSize() + "\n");
        this.commPort.sendStringToComm("G90\n");
    }//GEN-LAST:event_xMinusButtonActionPerformed

    private void xPlusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xPlusButtonActionPerformed
        //this.adjustManualLocation(this.getStepSize(), 0, 0);
        //this.sendManualCommand();
        this.commPort.sendStringToComm("G91 X" + this.getStepSize() + "\n");
        this.commPort.sendStringToComm("G90\n");
    }//GEN-LAST:event_xPlusButtonActionPerformed

    private void stepSizeSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_stepSizeSpinnerStateChanged

   }//GEN-LAST:event_stepSizeSpinnerStateChanged

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.commPort.cancelSend();
        this.disablePauseResume();

        this.updateControlsForSend(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseButtonActionPerformed
        // Note: Cannot cancel a send while paused because there are commands
        //       in the GRBL buffer which can't be un-sent.
        try {
            if (this.pauseButton.getText().equalsIgnoreCase("pause")) {
                this.commPort.pauseSend();
                this.pauseButton.setText("Resume");
                this.cancelButton.setEnabled(false);
            } else if (this.pauseButton.getText().equalsIgnoreCase("resume")) {
                this.commPort.resumeSend();
                this.pauseButton.setText("Pause");
                this.cancelButton.setEnabled(true);
            }
        } catch (Exception e) {
            e.printStackTrace();
            this.displayErrorDialog("Error while trying to pause/resume");
        }
    }//GEN-LAST:event_pauseButtonActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        ActionListener actionListener = new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                java.awt.EventQueue.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        long elapsedTime = Utils.millisSince(startTime);
                        durationValueLabel.setText(Utils.formattedMillis(elapsedTime));
                        int sent = Integer.parseInt(sentRowsValueLabel.getText());
                        int remainingRows = Integer.parseInt(remainingRowsValueLabel.getText());

                        long timePerRow = elapsedTime / sent;
                        long remainingTime = timePerRow * remainingRows;
                        remainingTimeValueLabel.setText(Utils.formattedMillis(remainingTime));
                    }
                });

            }
        };

        startTime = System.currentTimeMillis();
        if (timer != null) {
            timer.stop();
        }
        timer = new Timer(1000, actionListener);
        timer.start();

        try {
            // This will throw an exception and prevent that other stuff from
            // happening (clearing the table before its ready for clearing.
            this.commPort.isReadyToStreamFile();

            this.updateControlsForSend(true);
            this.commPort.streamFileToComm(this.gcodeFile);
        } catch (Exception e) {
            timer.stop();
            this.updateControlsForSend(false);
            e.printStackTrace();
            this.displayErrorDialog("Error while starting file stream: " + e.getMessage());
        }
    }//GEN-LAST:event_sendButtonActionPerformed

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                fileTextField.setText(fileChooser.getSelectedFile().getAbsolutePath());
                gcodeFile = fileChooser.getSelectedFile();
                Integer numRows = Utils.processFile(gcodeFile);

                rowsValueLabel.setText(numRows.toString());

                // Reset labels
                this.durationValueLabel.setText("00:00:00");
                this.remainingTimeValueLabel.setText("--:--:--");
                this.sentRowsValueLabel.setText("0");
                this.sentRows = 0;
                this.remainingRowsValueLabel.setText(numRows.toString());
            } catch (FileNotFoundException ex) {
                this.displayErrorDialog("Problem opening file: " + ex.getMessage());
            } catch (IOException e) {
                this.displayErrorDialog("Unknown IOException while processing file: " + e.getMessage());
            }
        } else {
            // Canceled file open.
        }
    }//GEN-LAST:event_browseButtonActionPerformed

    private void updateCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCheckBoxActionPerformed
        // TODO add your handling code here:
        if(updateCheckBox.isSelected()) statusTimer.start();
        else statusTimer.stop();
    }//GEN-LAST:event_updateCheckBoxActionPerformed

    private void abortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abortButtonActionPerformed
        try {
            this.commPort.abortSend();
        } catch (Exception e) {
            e.printStackTrace();
            this.displayErrorDialog("Error while trying to get status");
        }        
    }//GEN-LAST:event_abortButtonActionPerformed

    private void G5XWButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G5XWButton1ActionPerformed
        messageForConsole("Setting G54:\n");
        this.displayErrorDialog("Not implemented yet! \n");
    }//GEN-LAST:event_G5XWButton1ActionPerformed

    private void askParameterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_askParameterActionPerformed
        try {
            this.commPort.sendStringToComm(CommUtils.GRBL_PARAMETERS + "\n");
        } catch (Exception e) {
            e.printStackTrace();
            this.displayErrorDialog("Error while trying to get status");
        }
        G5XWButton1.setEnabled(true);
        G5XWButton2.setEnabled(true);
        G5XWButton3.setEnabled(true);
        G5XWButton4.setEnabled(true);
        G5XWButton5.setEnabled(true);
        G5XWButton6.setEnabled(true);
        G5XWButton7.setEnabled(true);
        G5XWButton8.setEnabled(true);
        G5XWButton9.setEnabled(true);
    }//GEN-LAST:event_askParameterActionPerformed

    private void readSettingsButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readSettingsButton1ActionPerformed
        try {
            this.commPort.sendStringToComm(CommUtils.GRBL_GET_SETTINGS + "\n");
        } catch (Exception e) {
            e.printStackTrace();
            this.displayErrorDialog("Error while trying to get status");
        }
    }//GEN-LAST:event_readSettingsButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
        
    private void initProgram() {
        this.loadPortSelector();
        this.checkScrollWindow();
        this.setTitle("Universal GcodeSender (Version 1.0.5)");
        
        // Hook the view up to the model
        this.commandList = new ArrayList<String>();
        this.commPort = new SerialCommunicator();
        
        // Setup file browser.
        this.fileChooser = new JFileChooser();
        this.fileChooser.setFileFilter(new GcodeFileTypeFilter());

        // Register listeners
        this.commPort.setFileStreamCompleteListener(this);
        this.commPort.setCommandQueuedListener(this);
        this.commPort.setCommandSentListener(this);
        this.commPort.setCommandCompleteListener(this);
        this.commPort.setCommandPreprocessorListener(this);
        this.commPort.setCommConsoleListener(this);
  
        
        // Command History
        this.commandTextField.addKeyListener(this);
        
        this.tableModel = (DefaultTableModel) this.commandTable.getModel();
        
        // Manual controls
        //this.manualLocation = new Coordinate(0,0,0);
        
        // Add keyboard listener for manual controls.
        KeyboardFocusManager.getCurrentKeyboardFocusManager()
            .addKeyEventDispatcher(new KeyEventDispatcher() {
                @Override
                public boolean dispatchKeyEvent(KeyEvent e) {
                    // Check context.
                    if ((!commandTextField.hasFocus() &&
                            e.getID() == KeyEvent.KEY_PRESSED) &&
                            xPlusButton.isEnabled()) {
                        switch (e.getKeyCode()) {
                            case KeyEvent.VK_RIGHT:
                                xPlusButtonActionPerformed(null);
                                e.consume();
                                return true;
                            case KeyEvent.VK_LEFT:
                                xMinusButtonActionPerformed(null);
                                e.consume();
                                return true;
                            case KeyEvent.VK_UP:
                                yPlusButtonActionPerformed(null);
                                e.consume();
                                return true;
                            case KeyEvent.VK_DOWN:
                                yMinusButtonActionPerformed(null);
                                e.consume();
                                return true;
                            case KeyEvent.VK_PAGE_UP:
                                zPlusButtonActionPerformed(null);
                                e.consume();
                                return true;
                            case KeyEvent.VK_PAGE_DOWN:
                                zMinusButtonActionPerformed(null);
                                e.consume();
                                return true;
                        }
                    }
                    
                    return false;
                }
            });
    }

    private void updateControlsForComm(boolean isOpen) {

        this.commPortComboBox.setEnabled(!isOpen);
        this.baudrateSelectionComboBox.setEnabled(!isOpen);
        this.refreshButton.setEnabled(!isOpen);
        this.commandTextField.setEnabled(isOpen);

        if (isOpen) {
            this.opencloseButton.setText("Close");
        } else {
            this.opencloseButton.setText("Open");
        }
        
        this.updateFileControls(isOpen);
        this.updateManualControls(isOpen);
    }
    
    private void updateFileControls(boolean enabled) {
        this.sendButton.setEnabled(enabled);
        this.browseButton.setEnabled(enabled);
        this.overrideSpeedCheckBox.setEnabled(enabled);
        this.overrideSpeedValueSpinner.setEnabled(enabled);
        this.fileTextField.setEnabled(enabled);

        if (!enabled) {
            // These might be on, so make sure they're off.
            this.disablePauseResume();
        }
    }
    
    private double getStepSize() {
        return Double.parseDouble( this.stepSizeSpinner.getValue().toString() );
    }
    
    private void updateManualLabels(Coordinate coords) {
        if(coords.s1){
            this.xLocationLabel.setText(coords.wx);
            this.yLocationLabel.setText(coords.wy);
            this.zLocationLabel.setText(coords.wz);
            this.xLocationLabel1.setText(coords.mx);
            this.yLocationLabel1.setText(coords.my);
            this.zLocationLabel1.setText(coords.mz);
            this.LabelStatus1.setText(coords.status1);
        }
        
        if(coords.s2){

            this.LabelStatus2.setText(coords.status2);
        }
        
        if(coords.s3){
            if(coords.G5X.contentEquals("G54")){
                this.G5XTextField1.setText(coords.G5X);
                this.G5XXTextField1.setText(coords.G5X_x);
                this.G5XYTextField1.setText(coords.G5X_y);
                this.G5XZTextField1.setText(coords.G5X_z);
            }
            if(coords.G5X.contentEquals("G55")){
                this.G5XTextField2.setText(coords.G5X);
                this.G5XXTextField2.setText(coords.G5X_x);
                this.G5XYTextField2.setText(coords.G5X_y);
                this.G5XZTextField2.setText(coords.G5X_z);
            }
            if(coords.G5X.contentEquals("G56")){
                this.G5XTextField3.setText(coords.G5X);
                this.G5XXTextField3.setText(coords.G5X_x);
                this.G5XYTextField3.setText(coords.G5X_y);
                this.G5XZTextField3.setText(coords.G5X_z);
            }
            if(coords.G5X.contentEquals("G57")){
                this.G5XTextField4.setText(coords.G5X);
                this.G5XXTextField4.setText(coords.G5X_x);
                this.G5XYTextField4.setText(coords.G5X_y);
                this.G5XZTextField4.setText(coords.G5X_z);
            }
            if(coords.G5X.contentEquals("G58")){
                this.G5XTextField5.setText(coords.G5X);
                this.G5XXTextField5.setText(coords.G5X_x);
                this.G5XYTextField5.setText(coords.G5X_y);
                this.G5XZTextField5.setText(coords.G5X_z);
            }
            if(coords.G5X.contentEquals("G59")){
                this.G5XTextField6.setText(coords.G5X);
                this.G5XXTextField6.setText(coords.G5X_x);
                this.G5XYTextField6.setText(coords.G5X_y);
                this.G5XZTextField6.setText(coords.G5X_z);
            }
            if(coords.G5X.contentEquals("G28")){
                this.G5XTextField7.setText(coords.G5X);
                this.G5XXTextField7.setText(coords.G5X_x);
                this.G5XYTextField7.setText(coords.G5X_y);
                this.G5XZTextField7.setText(coords.G5X_z);
            }
            if(coords.G5X.contentEquals("G30")){
                this.G5XTextField8.setText(coords.G5X);
                this.G5XXTextField8.setText(coords.G5X_x);
                this.G5XYTextField8.setText(coords.G5X_y);
                this.G5XZTextField8.setText(coords.G5X_z);
            }
            if(coords.G5X.contentEquals("G92")){
                this.G5XTextField9.setText(coords.G5X);
                this.G5XXTextField9.setText(coords.G5X_x);
                this.G5XYTextField9.setText(coords.G5X_y);
                this.G5XZTextField9.setText(coords.G5X_z);
            }
        }
        
        if(coords.s4){
            if(coords.settingNumber.contentEquals("$0")){
                this.settingLabel0.setText(coords.settingNumber);
                this.settingsTextField0.setText(coords.settingValue);
                this.settingHelpLabel0.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$1")){
                this.settingLabel1.setText(coords.settingNumber);
                this.settingsTextField1.setText(coords.settingValue);
                this.settingHelpLabel1.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$2")){
                this.settingLabel2.setText(coords.settingNumber);
                this.settingsTextField2.setText(coords.settingValue);
                this.settingHelpLabel2.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$3")){
                this.settingLabel3.setText(coords.settingNumber);
                this.settingsTextField3.setText(coords.settingValue);
                this.settingHelpLabel3.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$4")){
                this.settingLabel4.setText(coords.settingNumber);
                this.settingsTextField4.setText(coords.settingValue);
                this.settingHelpLabel4.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$5")){
                this.settingLabel5.setText(coords.settingNumber);
                this.settingsTextField5.setText(coords.settingValue);
                this.settingHelpLabel5.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$6")){
                this.settingLabel6.setText(coords.settingNumber);
                this.settingsTextField6.setText(coords.settingValue);
                this.settingHelpLabel6.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$7")){
                this.settingLabel7.setText(coords.settingNumber);
                this.settingsTextField7.setText(coords.settingValue);
                this.settingHelpLabel7.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$8")){
                this.settingLabel8.setText(coords.settingNumber);
                this.settingsTextField8.setText(coords.settingValue);
                this.settingHelpLabel8.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$9")){
                this.settingLabel9.setText(coords.settingNumber);
                this.settingsTextField9.setText(coords.settingValue);
                this.settingHelpLabel9.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$10")){
                this.settingLabel10.setText(coords.settingNumber);
                this.settingsTextField10.setText(coords.settingValue);
                this.settingHelpLabel10.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$11")){
                this.settingLabel11.setText(coords.settingNumber);
                this.settingsTextField11.setText(coords.settingValue);
                this.settingHelpLabel11.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$12")){
                this.settingLabel12.setText(coords.settingNumber);
                this.settingsTextField12.setText(coords.settingValue);
                this.settingHelpLabel12.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$13")){
                this.settingLabel13.setText(coords.settingNumber);
                this.settingsTextField13.setText(coords.settingValue);
                this.settingHelpLabel13.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$14")){
                this.settingLabel14.setText(coords.settingNumber);
                this.settingsTextField14.setText(coords.settingValue);
                this.settingHelpLabel14.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$15")){
                this.settingLabel15.setText(coords.settingNumber);
                this.settingsTextField15.setText(coords.settingValue);
                this.settingHelpLabel15.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$16")){
                this.settingLabel16.setText(coords.settingNumber);
                this.settingsTextField16.setText(coords.settingValue);
                this.settingHelpLabel16.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$17")){
                this.settingLabel17.setText(coords.settingNumber);
                this.settingsTextField17.setText(coords.settingValue);
                this.settingHelpLabel17.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$18")){
                this.settingLabel18.setText(coords.settingNumber);
                this.settingsTextField18.setText(coords.settingValue);
                this.settingHelpLabel18.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$19")){
                this.settingLabel19.setText(coords.settingNumber);
                this.settingsTextField19.setText(coords.settingValue);
                this.settingHelpLabel19.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$20")){
                this.settingLabel20.setText(coords.settingNumber);
                this.settingsTextField20.setText(coords.settingValue);
                this.settingHelpLabel20.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$21")){
                this.settingLabel21.setText(coords.settingNumber);
                this.settingsTextField21.setText(coords.settingValue);
                this.settingHelpLabel21.setText(coords.settingText);
            }
            if(coords.settingNumber.contentEquals("$22")){
                this.settingLabel22.setText(coords.settingNumber);
                this.settingsTextField22.setText(coords.settingValue);
                this.settingHelpLabel22.setText(coords.settingText);
            }
        }
    }
    
    private void updateManualControls(boolean enabled) {
        // Reset labels
        //if (enabled) {
        //    this.manualLocation = new Coordinate(0,0,0);
        //    this.updateManualLabels(this.manualLocation);
        //}
        
        this.xMinusButton.setEnabled(enabled);
        this.xPlusButton.setEnabled(enabled);
        this.yMinusButton.setEnabled(enabled);
        this.yPlusButton.setEnabled(enabled);
        this.zMinusButton.setEnabled(enabled);
        this.zPlusButton.setEnabled(enabled);
        this.stepSizeSpinner.setEnabled(enabled);
        this.resetCoordinatesButton.setEnabled(enabled);
        this.returnToZeroButton.setEnabled(enabled);
        this.performHomingCycleButton.setEnabled(enabled);
    }
    
    private void updateControlsForSend(boolean isSending) {
        // Command tab
        this.commandTextField.setEnabled(!isSending);
        // File tab
        this.sendButton.setEnabled(!isSending);
        this.pauseButton.setEnabled(isSending);
        this.overrideSpeedCheckBox.setEnabled(!isSending);
        this.overrideSpeedValueSpinner.setEnabled(!isSending);
        this.cancelButton.setEnabled(isSending);
        // Manual tab
        this.updateManualControls(!isSending);
        
        if (!isSending) {
            this.disablePauseResume();
        }
    }
    
    // Scans for comm ports and puts them in the comm port combo box.
    private void loadPortSelector() {
        commPortComboBox.removeAllItems();
        
        List<CommPortIdentifier> portList = CommUtils.getSerialPortList();
        
        if (portList.size() < 1) {
            this.displayErrorDialog("No serial ports found.");
        } else {
            // Sort?
            //java.util.Collections.sort(portList);

            java.util.Iterator<CommPortIdentifier> portIter = portList.iterator();

            while ( portIter.hasNext() ) 
            {
                CommPortIdentifier portIdentifier = portIter.next();
                commPortComboBox.addItem(portIdentifier.getName());
            }
            
            commPortComboBox.setSelectedIndex(0);
        }
    }
    
    private void checkScrollWindow() {
        DefaultCaret caret = (DefaultCaret)consoleTextArea.getCaret();
        if (scrollWindowCheckBox.isSelected()) {
          caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
          consoleTextArea.setCaretPosition(consoleTextArea.getDocument().getLength());
        } else {
            caret.setUpdatePolicy(DefaultCaret.NEVER_UPDATE);
        }
    }
    
    private int getSpeedOverrideValue() {
        int ret = -1;
        if (this.overrideSpeedCheckBox.isSelected()) {
            ret = Integer.parseInt( this.overrideSpeedValueSpinner.getValue().toString() );
        }
        return ret;
    }
    
    private String getNewline() {
        if (lineBreakNR.isSelected())
            return "\n\r";
        else if (lineBreakRN.isSelected())
            return "\r\n";
        else if (lineBreakN.isSelected())
            return "\n";
        else
            return "wtfbbq";
    }

    private boolean openCommConnection() {
        boolean connected = false;
        try {
            this.clearTable();
            this.sentRowsValueLabel.setText("0");
            this.sentRows = 0;

            connected = commPort.openCommPort( commPortComboBox.getSelectedItem().toString(), 
                                                     Integer.parseInt( baudrateSelectionComboBox.getSelectedItem().toString() ) );
            this.updateControlsForComm(connected);
        } catch (Exception e) {
            this.displayErrorDialog("Error opening connection: "+e.getMessage());
        }
        return connected;
    }
    
    private void closeCommConnection() {
        this.commPort.closeCommPort();
        
        this.updateControlsForComm(false);
    }
    
    private void askparserStatus() {
        if(updateCheckBox.isSelected())
        {
        try {
                commPort.parserStatusSend(); 
                } catch (Exception e) {
                    e.printStackTrace();
                    displayErrorDialog("Error while trying to get status");
                }
        }
    }
    
    void clearTable() {
        while (this.tableModel.getRowCount()>0){
            this.tableModel.removeRow(0);
        }
    }
    
    private void disablePauseResume() {
        this.pauseButton.setText("Pause");
        this.cancelButton.setEnabled(false);
    }
       
    private void scrollTable(int toRow) {
        // Scroll if selected.
        if (this.scrollWindowCheckBox.isSelected()) {
            if (this.commandTable.isVisible()) {
                this.commandTable.getSelectionModel().setSelectionInterval(toRow, toRow);
                this.commandTable.scrollRectToVisible(new Rectangle(this.commandTable.getCellRect(toRow, 0, true)));
            }
        }
        
    }
        
    private void displayErrorDialog(String errorMessage) {
        JOptionPane.showMessageDialog(new JFrame(), errorMessage, "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    /** SerialCommunicatorListener implementation.
     */
    
    @Override
    public void fileStreamComplete(String filename, boolean success) {
        // Stop the timer
        this.timer.stop();
        this.endTime = System.currentTimeMillis();
        remainingTimeValueLabel.setText(Utils.formattedMillis(0));
        askparserStatus();
        this.updateControlsForSend(false);
        if (success) {
            JOptionPane.showMessageDialog(new JFrame(), "Job complete after "+this.durationValueLabel.getText(), "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            displayErrorDialog("Job completed with error.");
        }
    }
    
    @Override
    public void commandQueued(GcodeCommand command) {
        final int row = command.getCommandNumber();
        final GcodeCommand sentCommand = command;

        this.tableModel.addRow(new Object[]{command.getCommandString(), command.isSent(), command.isDone(), command.getResponse()});
    }
     
    @Override
    public void commandSent(GcodeCommand command) {
        // Update # rows sent label
        this.sentRows++;
        
        final int row = command.getCommandNumber();
        final GcodeCommand sentCommand = command;
        // TODO: If Preprocessor changes the command mark the cell somehow
        // command (in case of preprocessor change)
        //tableModel.setValueAt(command.getCommandString(), command.getCommandNumber(), 0);
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                sentRowsValueLabel.setText(""+sentRows);
                        
                // sent
                tableModel.setValueAt(sentCommand.isSent(), row, 1);
                scrollTable(row);
            }});
    }
    
    @Override
    public void commandComplete(GcodeCommand command) {
        final int row = command.getCommandNumber();
        final GcodeCommand sentCommand = command;
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                // done
                tableModel.setValueAt(sentCommand.isDone(), row, 2);

                // response
                tableModel.setValueAt(sentCommand.getResponse(), row, 3);

                scrollTable(row);
                
                
                // decrement remaining rows
                int remaining = Integer.parseInt(remainingRowsValueLabel.getText());
                remaining--;
                remainingRowsValueLabel.setText("" + remaining);

            }});
    }
    
    @Override
    public String preprocessCommand(String command) {
        Integer overrideSpeed = this.getSpeedOverrideValue();
        String newCommand = command;

        // Remove comments from command.
        newCommand = CommUtils.removeComments(newCommand);

        // Override feed speed
        if (overrideSpeed > 0) {
            newCommand = CommUtils.overrideSpeed(command, this.getSpeedOverrideValue());
        }
        
        // Return the post processed command.
        return newCommand;
    }

    @Override
    public void messageForConsole(String msg) {
        this.consoleTextArea.append(msg);
        
        if (this.consoleTextArea.isVisible() &&
                this.scrollWindowCheckBox.isEnabled()) {
            this.consoleTextArea.setCaretPosition(this.consoleTextArea.getDocument().getLength());
        }
    }
    
    @Override
    public void messageForDisplay(Coordinate coords) {
        updateManualLabels(coords);
        if(coords.s&&!supressCheckBox.isSelected())
            messageForConsole(coords.message+"\n");
    }
    
    // My Variables
    private javax.swing.JFileChooser fileChooser;
    private java.io.File gcodeFile;
    private SerialCommunicator commPort;
    private int commandNum = -1;
    private List<String> commandList;
    private DefaultTableModel tableModel;
    private int sentRows = 0;
    private Coordinate manualLocation;
    private static NumberFormat formatter = new DecimalFormat("#.###");
    
    // Duration timer
    private Timer timer;
    private long startTime;
    private long endTime;
    
    // Generated variables.
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField G5XTextField1;
    private javax.swing.JTextField G5XTextField2;
    private javax.swing.JTextField G5XTextField3;
    private javax.swing.JTextField G5XTextField4;
    private javax.swing.JTextField G5XTextField5;
    private javax.swing.JTextField G5XTextField6;
    private javax.swing.JTextField G5XTextField7;
    private javax.swing.JTextField G5XTextField8;
    private javax.swing.JTextField G5XTextField9;
    private javax.swing.JButton G5XWButton1;
    private javax.swing.JButton G5XWButton2;
    private javax.swing.JButton G5XWButton3;
    private javax.swing.JButton G5XWButton4;
    private javax.swing.JButton G5XWButton5;
    private javax.swing.JButton G5XWButton6;
    private javax.swing.JButton G5XWButton7;
    private javax.swing.JButton G5XWButton8;
    private javax.swing.JButton G5XWButton9;
    private javax.swing.JTextField G5XXTextField1;
    private javax.swing.JTextField G5XXTextField2;
    private javax.swing.JTextField G5XXTextField3;
    private javax.swing.JTextField G5XXTextField4;
    private javax.swing.JTextField G5XXTextField5;
    private javax.swing.JTextField G5XXTextField6;
    private javax.swing.JTextField G5XXTextField7;
    private javax.swing.JTextField G5XXTextField8;
    private javax.swing.JTextField G5XXTextField9;
    private javax.swing.JTextField G5XYTextField1;
    private javax.swing.JTextField G5XYTextField2;
    private javax.swing.JTextField G5XYTextField3;
    private javax.swing.JTextField G5XYTextField4;
    private javax.swing.JTextField G5XYTextField5;
    private javax.swing.JTextField G5XYTextField6;
    private javax.swing.JTextField G5XYTextField7;
    private javax.swing.JTextField G5XYTextField8;
    private javax.swing.JTextField G5XYTextField9;
    private javax.swing.JTextField G5XZTextField1;
    private javax.swing.JTextField G5XZTextField2;
    private javax.swing.JTextField G5XZTextField3;
    private javax.swing.JTextField G5XZTextField4;
    private javax.swing.JTextField G5XZTextField5;
    private javax.swing.JTextField G5XZTextField6;
    private javax.swing.JTextField G5XZTextField7;
    private javax.swing.JTextField G5XZTextField8;
    private javax.swing.JTextField G5XZTextField9;
    private javax.swing.JLabel LabelStatus1;
    private javax.swing.JLabel LabelStatus2;
    private javax.swing.JButton abortButton;
    private javax.swing.JButton askParameter;
    private javax.swing.JButton askParserStatus;
    private javax.swing.JButton askStatus;
    private javax.swing.JComboBox baudrateSelectionComboBox;
    private javax.swing.JButton browseButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox commPortComboBox;
    private javax.swing.JLabel commandLabel;
    private javax.swing.JTable commandTable;
    private javax.swing.JTextField commandTextField;
    private javax.swing.JTextArea consoleTextArea;
    private javax.swing.JLabel durationLabel;
    private javax.swing.JLabel durationValueLabel;
    private javax.swing.JLabel fileLabel;
    private javax.swing.JTextField fileTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.ButtonGroup lineBreakGroup;
    private javax.swing.JRadioButton lineBreakN;
    private javax.swing.JRadioButton lineBreakNR;
    private javax.swing.JRadioButton lineBreakRN;
    private javax.swing.JPanel manualControlPanel;
    private javax.swing.JButton opencloseButton;
    private javax.swing.JCheckBox overrideSpeedCheckBox;
    private javax.swing.JSpinner overrideSpeedValueSpinner;
    private javax.swing.JButton pauseButton;
    private javax.swing.JButton performHomingCycleButton;
    private javax.swing.JButton readSettingsButton1;
    private javax.swing.JButton refreshButton;
    private javax.swing.JLabel remainingRowsLabel;
    private javax.swing.JLabel remainingRowsValueLabel;
    private javax.swing.JLabel remainingTimeLabel;
    private javax.swing.JLabel remainingTimeValueLabel;
    private javax.swing.JButton resetCoordinatesButton;
    private javax.swing.JButton returnToZeroButton;
    private javax.swing.JLabel rowsLabel;
    private javax.swing.JLabel rowsValueLabel;
    private javax.swing.JCheckBox scrollWindowCheckBox;
    private javax.swing.JButton sendButton;
    private javax.swing.JButton sendHoming;
    private javax.swing.JButton sendKill;
    private javax.swing.JLabel sentRowsLabel;
    private javax.swing.JLabel sentRowsValueLabel;
    private javax.swing.JLabel settingHelpLabel0;
    private javax.swing.JLabel settingHelpLabel1;
    private javax.swing.JLabel settingHelpLabel10;
    private javax.swing.JLabel settingHelpLabel11;
    private javax.swing.JLabel settingHelpLabel12;
    private javax.swing.JLabel settingHelpLabel13;
    private javax.swing.JLabel settingHelpLabel14;
    private javax.swing.JLabel settingHelpLabel15;
    private javax.swing.JLabel settingHelpLabel16;
    private javax.swing.JLabel settingHelpLabel17;
    private javax.swing.JLabel settingHelpLabel18;
    private javax.swing.JLabel settingHelpLabel19;
    private javax.swing.JLabel settingHelpLabel2;
    private javax.swing.JLabel settingHelpLabel20;
    private javax.swing.JLabel settingHelpLabel21;
    private javax.swing.JLabel settingHelpLabel22;
    private javax.swing.JLabel settingHelpLabel3;
    private javax.swing.JLabel settingHelpLabel4;
    private javax.swing.JLabel settingHelpLabel5;
    private javax.swing.JLabel settingHelpLabel6;
    private javax.swing.JLabel settingHelpLabel7;
    private javax.swing.JLabel settingHelpLabel8;
    private javax.swing.JLabel settingHelpLabel9;
    private javax.swing.JLabel settingLabel0;
    private javax.swing.JLabel settingLabel1;
    private javax.swing.JLabel settingLabel10;
    private javax.swing.JLabel settingLabel11;
    private javax.swing.JLabel settingLabel12;
    private javax.swing.JLabel settingLabel13;
    private javax.swing.JLabel settingLabel14;
    private javax.swing.JLabel settingLabel15;
    private javax.swing.JLabel settingLabel16;
    private javax.swing.JLabel settingLabel17;
    private javax.swing.JLabel settingLabel18;
    private javax.swing.JLabel settingLabel19;
    private javax.swing.JLabel settingLabel2;
    private javax.swing.JLabel settingLabel20;
    private javax.swing.JLabel settingLabel21;
    private javax.swing.JLabel settingLabel22;
    private javax.swing.JLabel settingLabel3;
    private javax.swing.JLabel settingLabel4;
    private javax.swing.JLabel settingLabel5;
    private javax.swing.JLabel settingLabel6;
    private javax.swing.JLabel settingLabel7;
    private javax.swing.JLabel settingLabel8;
    private javax.swing.JLabel settingLabel9;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JTextField settingsTextField0;
    private javax.swing.JTextField settingsTextField1;
    private javax.swing.JTextField settingsTextField10;
    private javax.swing.JTextField settingsTextField11;
    private javax.swing.JTextField settingsTextField12;
    private javax.swing.JTextField settingsTextField13;
    private javax.swing.JTextField settingsTextField14;
    private javax.swing.JTextField settingsTextField15;
    private javax.swing.JTextField settingsTextField16;
    private javax.swing.JTextField settingsTextField17;
    private javax.swing.JTextField settingsTextField18;
    private javax.swing.JTextField settingsTextField19;
    private javax.swing.JTextField settingsTextField2;
    private javax.swing.JTextField settingsTextField20;
    private javax.swing.JTextField settingsTextField21;
    private javax.swing.JTextField settingsTextField22;
    private javax.swing.JTextField settingsTextField3;
    private javax.swing.JTextField settingsTextField4;
    private javax.swing.JTextField settingsTextField5;
    private javax.swing.JTextField settingsTextField6;
    private javax.swing.JTextField settingsTextField7;
    private javax.swing.JTextField settingsTextField8;
    private javax.swing.JTextField settingsTextField9;
    private javax.swing.JLabel stepSizeLabel;
    private javax.swing.JSpinner stepSizeSpinner;
    private javax.swing.JCheckBox supressCheckBox;
    private javax.swing.JButton toggleGcodCheckMode;
    private javax.swing.JCheckBox updateCheckBox;
    private javax.swing.JLabel xLocationLabel;
    private javax.swing.JLabel xLocationLabel1;
    private javax.swing.JButton xMinusButton;
    private javax.swing.JButton xPlusButton;
    private javax.swing.JLabel yLocationLabel;
    private javax.swing.JLabel yLocationLabel1;
    private javax.swing.JButton yMinusButton;
    private javax.swing.JButton yPlusButton;
    private javax.swing.JLabel zLocationLabel;
    private javax.swing.JLabel zLocationLabel1;
    private javax.swing.JButton zMinusButton;
    private javax.swing.JButton zPlusButton;
    // End of variables declaration//GEN-END:variables
}
